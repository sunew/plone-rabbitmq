[buildout]
extends = project.cfg
	base/tools.cfg

parts +=
    zeo
#    instance_demostorage
#    instance_zeo_beforestorage
    omelette
    test

# for threadframe:
allow-hosts +=
    *.majid.info

auto-checkout +=
#    Products.PDBDebugMode
#    translationrecorder

[sources]
translationrecorder = git git@github.com:malthe/translationrecorder
#Products.PDBDebugMode = git git@github.com:sunew/Products.PDBDebugMode.git branch=disable-ipython-history

[zeo]
recipe = plone.recipe.zeoserver
zeo-address = 50002
blob-storage = ${buildout:directory}/var/blobstorage

# Complete, local data.fs
[instance]
debug-mode = on
verbose-security = on

zeo-client = true
zeo-address = ${zeo:zeo-address}
zeo-client-cache-size = 10MB
shared-blob = on
blob-storage = ${zeo:blob-storage}

# good when using the debugger:
zserver-threads = 1

eggs +=
#    threadframe
#    ipdb
#    plone.reload
    Products.DocFinderTab
#    Products.PDBDebugMode
    Products.PrintingMailHost
#    Products.Gloworm
#    translationrecorder
# With sauna.reload: Start Plone with reload enabled:
# RELOAD_PATH=src bin/client1 fg
    sauna.reload
# Sauna reload requires zeo.

zope-conf-additional += %import sauna.reload

zcml +=


## For translationrecorder:
#environment-vars +=
#    RECORD_TRANSLATIONS ./recorded_locales


# good for wrapping a local data.fs that you do not want to change/corrupt:
[instance_demostorage]
<= instance
demo-storage = on
demo-file-storage = demofs/Data.fs
demo-blob-storage = ${buildout:directory}/var/demoblob

# Connect to zeo server with before-storage, and a local demo-storage. This means
# you can safely connect to a production database. All changes you make is made
# locally in the demo-storage.
# Connect to the zeo server with ssh -L 8081:127.0.0.1:<zeoport> <username>@host
[instance_zeo_beforestorage]
<= instance_demostorage
before-storage = now
zeo-client = true
zeo-address = 127.0.0.1:8081
zeo-client-cache-size = 300MB
shared-blob = off


[omelette]
recipe = collective.recipe.omelette
ignore-develop = True
eggs = ${instance:eggs}

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}

